// <auto-generated />
using System;
using DesafioChallengeSPA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioChallengeSPA.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioChallengeSPA.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATE");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ProfissaoId")
                        .HasColumnType("int");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("ProfissaoId");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "52665483041",
                            DataNascimento = new DateTime(1997, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Idade = 24,
                            Nome = "Raul",
                            ProfissaoId = 1,
                            Sobrenome = "Marciano"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "99257878074",
                            DataNascimento = new DateTime(1995, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Idade = 26,
                            Nome = "José Antonio",
                            ProfissaoId = 2,
                            Sobrenome = "Oliveira"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "42257300009",
                            DataNascimento = new DateTime(1998, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Idade = 23,
                            Nome = "Maria",
                            ProfissaoId = 3,
                            Sobrenome = "Aparecida"
                        },
                        new
                        {
                            Id = 4,
                            CPF = "29671743005",
                            DataNascimento = new DateTime(1996, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Idade = 25,
                            Nome = "Isabela Genes",
                            ProfissaoId = 4,
                            Sobrenome = "Dutra"
                        });
                });

            modelBuilder.Entity("DesafioChallengeSPA.Models.Profissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Profissao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Programador"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Analista"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Scrum Master"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "DevOps"
                        });
                });

            modelBuilder.Entity("DesafioChallengeSPA.Models.Cliente", b =>
                {
                    b.HasOne("DesafioChallengeSPA.Models.Profissao", "Profissao")
                        .WithMany()
                        .HasForeignKey("ProfissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profissao");
                });
#pragma warning restore 612, 618
        }
    }
}
